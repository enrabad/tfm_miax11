{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "## Que es el VIX?\n",
    "\n",
    "De manera resumida se puede decir que el Vix (Volatility Index)  mide las expectativas del mercado acerca de la volatilidad implícita a 30 días en los precios de las opciones del S&P 500 de manera anualizada.\n",
    "\n",
    "## Como se interpreta para generar una señal de trading?\n",
    "\n",
    "Hay varias maneras de interpretar el VIX, la más conocida es la que relaciona diferentes niveles del VIX con la situación del mercado. (hasta 20 mercado alcista, entre 20 y 30 mercado volatil y mayor que 30 mercado bajista). Sin embargo, el VIX también se puede utilizar para estimar la volatilidad del SP500 a nivel diario, dividiendo el valor del vix por la raiz cuadradada de 256, que es el número de días de un año bursatil. Normalmente este valor es superior al cambio de precio diario del SP500 (rentabilidad diaria). Cuando ocurre lo contrario, es decir, que la rentabilidad diaria en valor absoluto supera el valor del VIX trasladado a escala diaria (dividido por la raiz cuadrada de 256), indica que el mercado está muy confiado (VIX infravalorado), con lo que puede ser una señal de cambio de sentido del precio del SP500.\n",
    "\n",
    "Se podría decir que es una señal de cobertura, pone el SP500 en corto cuando cumpla la condición anterior y la rentabilidad sea positiva (mercado alcista y confiado). La manera de calcularla será:\n",
    "\n",
    "**vixsignal = (rentdiaSP500 - VIX/$\\sqrt{256}$) > 0)?-1:1**\n",
    "\n",
    "\n",
    "## Comparativa VIXSI histórico respecto a VIXSI real\n",
    "\n",
    "Para comparar la señal calculada con los datos históricos respecto a la señal generada en tiempo real, se utiliza los datos calculados del VIXSI en el periodo de live trading del 01-08-2024 hasta final de año."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import random\n",
    "import time\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "\n",
    "from datetime import datetime\n",
    "from datetime import timedelta\n",
    "from dateutil.relativedelta import relativedelta\n",
    "\n",
    "import yfinance as yf\n",
    "\n",
    "import pickle\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "plt.style.use('seaborn-darkgrid')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[*********************100%***********************]  1 of 1 completed\n",
      "[*********************100%***********************]  1 of 1 completed\n"
     ]
    }
   ],
   "source": [
    "desde = \"2008-01-01\"\n",
    "hasta = datetime.now().strftime(\"%Y-%m-%d\")\n",
    "VIX = yf.download(tickers=\"^VIX\", start=desde, end=hasta)\n",
    "SPY = yf.download(tickers=\"SPY\", start=desde, end=hasta, auto_adjust=False)\n",
    "datos = pd.concat([VIX.Close,SPY.Close], axis=1).dropna()\n",
    "datos.columns = [\"VIX\",\"SPY\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "def vixsignal (datos, vix=\"VIX\", benchmark=\"SPY\"):\n",
    "    rets = datos[benchmark].pct_change()\n",
    "    fvixsi = rets - datos[vix]/(np.sqrt(256)*100)\n",
    "    vixsi = np.where ((fvixsi > 0), -1, 1)\n",
    "    return vixsi,fvixsi\n",
    "\n",
    "vixsi_df = pd.DataFrame(index=datos.index)\n",
    "vixsi, fvixsi =  vixsignal (datos)\n",
    "#vixsi_df[\"FVIXSI\"] = fvixsi\n",
    "vixsi_df[\"VIXSI\"] = vixsi\n",
    "vixsi_df.dropna(inplace=True)\n",
    "vixsi_df.to_csv(\"../datos/VIXSI.csv\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[*********************100%***********************]  1 of 1 completed\n",
      "[*********************100%***********************]  1 of 1 completed\n",
      "número de dias con diferencia entre señales: 2.0   4.0 %\n"
     ]
    }
   ],
   "source": [
    "desde = \"2024-08-01\"\n",
    "hasta = datetime.now()\n",
    "VIX = yf.download(tickers=\"^VIX\", start=desde, end=hasta)\n",
    "SPY = yf.download(tickers=\"SPY\", start=desde, end=hasta)\n",
    "datos = pd.concat([VIX.Close,SPY.Close], axis=1).dropna()\n",
    "datos.columns = [\"VIX\",\"SPY\"]\n",
    "vixsi_df = pd.DataFrame(index=datos.index)\n",
    "vixsi_df[\"VIXSI\"],FVIXSI = vixsignal(datos)\n",
    "vixsi_df.dropna(inplace=True)\n",
    "\n",
    "vixsi_real = pd.read_csv(\"VIXSI_real.csv\", index_col=0)\n",
    "vixsi_real.index = pd.to_datetime(vixsi_real.index)\n",
    "df_señales = pd.concat([vixsi_df, vixsi_real],axis=1).dropna()\n",
    "df_señales.columns =[\"VIXSI_HIST\",\"VIXSI_REAL\"]\n",
    "diff_dias = (np.abs(df_señales.diff(axis=1)/2)).sum()[1]\n",
    "print (\"número de dias con diferencia entre señales:\", diff_dias, \" \", diff_dias/len(df_señales)*100, \"%\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>VIXSI_HIST</th>\n",
       "      <th>VIXSI_REAL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2024-08-01</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-08-02</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-08-05</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-08-06</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-08-07</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-08-08</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-08-09</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-08-12</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-08-13</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-08-14</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-08-15</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-08-16</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-08-19</th>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-08-20</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-08-21</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-08-22</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-08-23</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-08-26</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-08-27</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-08-28</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-08-29</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-08-30</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-09-03</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-09-04</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-09-05</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-09-06</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-09-09</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-09-10</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-09-11</th>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-09-12</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-09-13</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-09-16</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-09-17</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-09-18</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-09-19</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-09-20</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-09-23</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-09-24</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-09-25</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-09-26</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-09-27</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-09-30</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-10-01</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-10-02</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-10-03</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-10-04</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-10-07</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-10-08</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-10-09</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-10-10</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            VIXSI_HIST  VIXSI_REAL\n",
       "2024-08-01         NaN         0.0\n",
       "2024-08-02         NaN         0.0\n",
       "2024-08-05         NaN         0.0\n",
       "2024-08-06         NaN         0.0\n",
       "2024-08-07         NaN         0.0\n",
       "2024-08-08         NaN         0.0\n",
       "2024-08-09         NaN         0.0\n",
       "2024-08-12         NaN         0.0\n",
       "2024-08-13         NaN         0.0\n",
       "2024-08-14         NaN         0.0\n",
       "2024-08-15         NaN         0.0\n",
       "2024-08-16         NaN         0.0\n",
       "2024-08-19         NaN         1.0\n",
       "2024-08-20         NaN         0.0\n",
       "2024-08-21         NaN         0.0\n",
       "2024-08-22         NaN         0.0\n",
       "2024-08-23         NaN         0.0\n",
       "2024-08-26         NaN         0.0\n",
       "2024-08-27         NaN         0.0\n",
       "2024-08-28         NaN         0.0\n",
       "2024-08-29         NaN         0.0\n",
       "2024-08-30         NaN         0.0\n",
       "2024-09-03         NaN         0.0\n",
       "2024-09-04         NaN         0.0\n",
       "2024-09-05         NaN         0.0\n",
       "2024-09-06         NaN         0.0\n",
       "2024-09-09         NaN         0.0\n",
       "2024-09-10         NaN         0.0\n",
       "2024-09-11         NaN        -1.0\n",
       "2024-09-12         NaN         0.0\n",
       "2024-09-13         NaN         0.0\n",
       "2024-09-16         NaN         0.0\n",
       "2024-09-17         NaN         0.0\n",
       "2024-09-18         NaN         0.0\n",
       "2024-09-19         NaN         0.0\n",
       "2024-09-20         NaN         0.0\n",
       "2024-09-23         NaN         0.0\n",
       "2024-09-24         NaN         0.0\n",
       "2024-09-25         NaN         0.0\n",
       "2024-09-26         NaN         0.0\n",
       "2024-09-27         NaN         0.0\n",
       "2024-09-30         NaN         0.0\n",
       "2024-10-01         NaN         0.0\n",
       "2024-10-02         NaN         0.0\n",
       "2024-10-03         NaN         0.0\n",
       "2024-10-04         NaN         0.0\n",
       "2024-10-07         NaN         0.0\n",
       "2024-10-08         NaN         0.0\n",
       "2024-10-09         NaN         0.0\n",
       "2024-10-10         NaN         0.0"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_señales.diff(axis=1)/2"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "python39",
   "language": "python",
   "name": "python39"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
